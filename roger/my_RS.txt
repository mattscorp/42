# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    my_RS.txt                                          :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: mascorpi <marvin@42.fr>                    +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2019/02/25 16:51:49 by mascorpi          #+#    #+#              #
#    Updated: 2019/03/14 16:41:14 by mascorpi         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

		##############################################
		#	______   _____	_____	_____	______ #
		#	|   /	 |   |	|	|       |   /	 #
		#	-===     |   |  |  ___  ---     -===     #
		#	|   \	 |   |  |    |  |       |   \    #
		#	|    \   `````  ``````  `````   |    \   #
		##############################################

	Globalde la VM 8go
--> une partition de 4.2 go (mettre 4.5go lors du partitionnement)


	Creer un utilisateur non root.
	--> lui donne les droits sudo

	************************************************************************************************************

	Quelque paquets utili:
	-> vim
	-> net-tools

	*************************************************************************************************************
	@@@@@@@@@@@@@@@@@@@@@@@@@@@ DHCP/IP STATIC  @@@@@@@@@@@@@@@@@@@
	Desactive le DHCP
	--> /etc/network/interfaces
{
	mettre en commentaire la ligne ou est dhcp
		ajouter :
#
#ip static
		auto enp0s3
		iface enp0s3 inet static
		address "10.12.1.101" <==== faire un ip a pour recuperre son adresse
		netmask 255.255.255.252
		gateway 10.12.254.254
#
}

appliquer les modifs:
# sudo ifdown enp0s3
# sudo ifup enp0s3

************************************************************************************************************

changer le port SSH de base a savoir le port 22 ///////// enlever la permission conexion root
--> sudo vim /etc/ssh/sshd_config

changer le port, enregistrer puis redemarer le service
changer le droit de connexion root, enregistrer puis redemarer le service

sudo service ssh restart

pour se connecter maintenant il faut utilise l option -p avec le nouveau port adequate

*************************************************************************************************************
@@@@@@@@@@@@@@@@@@@@@@@ CONEXION SSH @@@@@@@@@@@@@@@@@@@@@@@@@@

SSH avec publickey

=== Dans le Terminal de l'ordinateur ===
--> 
cd ~/.ssh
	ssh-keygen -t rsa 
(cela va generer une cle RSA unique, selon la session d ordi ou l on se trouve - si on change d ordi il faut le refaire)

	===	Dans la VM ===

	-->	Verifier que ~/.ssh/authorized_keys existe, sinon le creer
	==> mkdir ~/.ssh
	==> touch ~/.ssh/authorized_keys

	=== Dans le terminal de l'ordinateur ==

	scp -P "port defini" ~/.ssh/id_rsa.pub matt@10.12.1.143:/home/matt/.ssh/authorized_keys

	Relancer la VM / le servie

	===	Dans la VM ===
	Modification du Port
	-->	sudo vim /etc/ssh/sshd_config
	passer "#Port 22" en "Port "choisi precedement"
	Modification des modalites d'acces de SSH
	Remplacer :	"#PubkeyAuthentication yes" par "PubkeyAuthentication yes"
	Remplacer : "#PermitRootLogin prohibit-password" par "PermitRootLogin no"
	Remplacer : “#AuthorizedKeysFile      .ssh/authorized_keys .ssh/authorized_keys2" par "AuthorizedKeysFile      .ssh/authorized_keys .ssh/authorized_keys2"
	Remplacer : “#PasswordsAuthentification yes”.  “PasswordsAuthentification no”
	************************************************************************************************************
	@@@@@@@@@@@@@@@@@@@ FIREWALL @@@@@@@@@@@@@@@@@@@@@@@@

	--------------  UFW ---------------
	Instaler ufw 
	--> sudo apt-get install ufw
	reset le firewall avec 

	--> sudo ufw reset
	--> sudo ufw status 
	--> sudo ufw enable
	--> sudo ufw reload
	--> sudo ufw default deny incoming ==> 
	--> sudo ufw allow OpenSSH 
--> sudo ufw limit ssh  (de base limit a 6 tentative de co en 30 sec)

	--> sudo ufw allow in on eth0 to any port 80

	--> sudo ufw allow "port number" 
	--> sudo ufw deny "port number" 
	--> sudo ufw app list

	--> sudo ufw deny 22 comment 'block le port de base'

	--> sudo ufw logging on ===> to maintain logs 

	*****************************************************************************************************************
	@@@@@@@@@@@@@@@@@@@@@@ BLOQUER DDOS @@@@@@@@@@@@@@@@@@@@@@@@@@@

	------------ FAIL2BAN -------------

https://www.youtube.com/watch?v=-rmK50PbqCY

	sudo vim /etc/fail2ban/jail.local

	ecrire cela dedans 

	==> 
	[sshd]

	port = 6969
	enabled = true
	logpath = %(sshd_log)s
	backend = %(sshd_backend)s
	maxretry = 7
	bantime = 86400

	[sshd-ddos]

	port = 6969
	enabled = true
	logpath = %(sshd_log)s
	backend = %(sshd_backend)s
	maxretry = 7
	bantime = 86400

	[

		sudo fail2ban-client status sshd   ===> permet de savoir qui est dans la prison

		sudo fail2ban-client set sshd unbanip "l ip a deban"


******************************************************************************************************************
Portsentry




ous devez mettre en place une protection contre les scans sur les ports ouverts de votre VM.
installation du service
	apt-get install portsentry

Rajout de notre adresse ip dans afin de nous permettre de scanner nos ports (exception) dans : /etc/portsentry/portsentry.ignore.static
	10.12.1.108
	10.12.7.7

Puis restart avec le systeme avec la commande suivante :
	sudo service portsentry restart (afin que .ignore.static remplit .ignore)

Modification du fichier /etc/default/portsentry :
	Remplacer
	TCP_MODE="tcp"
	UDP_MODE="udp"
	Par
	TCP_MODE="atcp"
	UDP_MODE="audp"

Dans /etc/portsentry/portsentry.conf :
	##################
	# Ignore Options #
	##################
	...
	# 0 = Do not block UDP/TCP scans.
	# 1 = Block UDP/TCP scans.
	# 2 = Run external command only (KILL_RUN_CMD)
		Remplacer
		BLOCK_UDP="0"
		BLOCK_TCP="0"
		Par
		BLOCK_UDP="1"
		BLOCK_TCP="1"

Afin de tester la robustesse de notre protection on peut par exemple creer une nouvelle VM afin de tenter de nmap notre VM
	Lorsqu'un scan a ete effectuer d'une adresse ip differente, l'edresse est bloque dans : 
		/etc/hosts.deny
	Aussi si sudo route -> on peut voir que ! a ete rajouter devant l'adresse ip de l'attquer commande pour l'effacer :
		sudo route del <adresse> reject

Ressource : https://www.it-connect.fr/bloquer-les-individus-qui-scannent-votre-machine-avec-portsentry/




@@@@@@@@@@@@@@@@@@@@@@@@ BLOQUER SCAN PORT @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

----------------- PSAD ----------------------
==> apt-get install psad

The main PSAD configuration file is /etc/psad/psad.conf. In this tutorial, the IPS feature will be used to detects DOS attacks on the web server.

The basic settings for PSAD are given below.

EMAIL_ADDRESSES   root@localhost; 
HOSTNAME          PSAD-box;
HOME_NET          any;
EXTERNAL_NET      any;

Now run the following command to update the signature database for detection of attacks.

==> psad --sig-update

Start PSAD using the following command and check status.

==> psad start

pour lister les attaquqnt
==> psad --fw-list


pour le rendre compatible avec ufw :

You need to add extra rules to ufw to satisfy psad. Edit following two files:

sudo vi /etc/ufw/before.rules

sudo vi /etc/ufw/before6.rules
To both files listed above, add following lines for psad, at the very end, but before COMMIT

# custom logging directives for psad
-A INPUT -j LOG
-A FORWARD -j LOG

# don't delete the 'COMMIT' line or these rules won't be processed
COMMIT

Next restart ufw

sudo ufw disable
sudo ufw enable

https://serverfault.com/questions/421087/how-to-set-iptables-log-rules-for-psad-with-ufw/475500
https://www.howtoforge.com/tutorial/psad-installation-and-configuration-on-debian-jessie/

******************************************************************************************
@@@@@@@@@@@@@@@@@@@@@@@@@@ ARRETER SERVICE NON NECESSAIRE @@@@@@@@@@@@@@@@@@@@@@@@@@@

Connaitre les service en cours
--> sudo service --status-all
et encore pire
--> systemctl list-unit-files | grep enable

Creer un dossier Script dans /home/matt

puis un fichier en .sh

le rendre executable
sudo chmod +x close.sh

dedans ==>
#!/bin/bash
sudo service dbus stop 2>/dev/null
sudo service procps stop 2>/dev/null
sudo service kmod stop 2>/dev/null
sudo service portsentry restart

2>/dev/null => redirection d'un flux de sortie d’erreur vers rien

sudo systemctl disable apt-daily-upgrade.timer
sudo systemctl disable remote-fs.target
sudo systemctl disable apt-daily.timer
sudo systemctl disable systemd-timesyncd.service


ATTENTION, SI UTILISATION DE SUDO, POSSIBILITE DE CONFLIT
Ne plus demander de mot de passe sudo pour add user	
sudo vim /etc/sudoers
Modifier
%sudo	ALL=(ALL:ALL) ALL
	Par 
%sudo	ALL=(ALL:ALL) NOPASSWD: ALL

dans crontab -e (-e afin d'editer les actions de contab):
@reboot sleep 20 && ~/Script/close.sh
(afin de close les services non utilise 20 secondes apres le lancement de la VM)





*********************************************************************************************

Se mettre en sudo
==> 
su root

Remonter a la racine et aller dans /root


Creer les fichier 

-> update_scirpt.sh
-> verif_cron.sh

Les rendre executable 

chmod 755 update_scritp.sh verif_cron.sh

========== Dans update.sh ==============

#!/bin/bash
	(apt-get update && apt-get -y upgrade) >> /var/log/update_script.log



========== Dans verif_cron.sh =============

#! /bin/bash

# Configuration

#Nom du fichier a surveiller
NOM_FICHIER="/etc/crontab"
# Date de la dernière modification du fichier ci-dessus
DERNIERE_MODIF=$(date -r ${NOM_FICHIER} '+%d/%m/%Y %H:%M')
# Adresse mail de l'administrateur ou de la personne a prévenir
MAIL_ADMIN="scorpioni.matt@gmail.com"
# Date a laquelle le fichier a bien été modifié par vos soins
DATE_MODIF="14/03/2019 15:04"
# Test si les deux dates sont identiques
if [ "${DERNIERE_MODIF}" != "${DATE_MODIF}" ]; then
	   # Si différente, envoi du mail d'alerte
	      CORPS_MESSAGE="Alerte, le fichier ${NOM_FICHIER} a été modifié le ${DERNIERE_MODIF}";
	         echo "$CORPS_MESSAGE" | mail -s "Alerte surveillance modification de fichier" "${MAIL_ADMIN}";
	 fi

en tant que root faire un
=>
crontab -e

@reboot ./update_script.sh
0 4 * * 1 ./update_script.sh

@midnight ./verif_cron.sh
*********************************************************************************************



*********************************************************************************************

Réalisez un script qui met à jour l’ensemble des sources de package, puis de vos packages et qui log l’ensemble dans un fichier nommé /var/log/update_script.log. Créez une tache plannifiée pour ce script une fois par semaine à 4h00 du matin et à chaque reboot de la machine.
Il faut dans un premier temps creer une fichier appeller update_script.log dans /var/log/ :
	cd /var/log/ && sudo touch  update_script.log
Ensuite il faut changer les permissions sur un fichier :
	sudo chmod 777 update_script.log

Dans /home/matt/Script/, creer un script puis y mettre :
********************************************************
Script :
	#!/bin/bash
	(apt-get update && apt-get -y upgrade) >> /var/log/update_script.log
*********************************************************

Rendre executablee le .sh par tous
	sudo chmod +x close_service.sh
Enfin, on met dans crontab -e :


	@reboot sleep 25 && ~/Script/update_upgrade.sh
	0 4 * * 1 ~/Script/update_upgrade.sh

Pour tester, essayer dans une minute, attention, la fonction date vous donnera l'heure reel du systeme.
Pour le script, rajouter -Y upgrade afin de dire oui afin de ne pas prendre de message d'erreur.

-----------------------------------------------------------------------------------------------------------------------------------------------------

9) Réalisez un script qui permet de surveiller les modifications du fichier /etc/crontab et envoie un mail à root si celui-ci a été modifié. Créez une tache plannifiée pour script tous les jours à minuit.
Telecharger le service postfix

	sudo apt install postfix
	sudo apt install mailutils

Puis, suivre le tuto suivant : 
cat /var/spool/mail/rootdd
	https://www.grafikart.fr/tutoriels/postfix-sendonly-695

Exemple de Script :
https://www1.zonewebmaster.eu/serveur-debian-automatisation:scripts-debian-alerte-modification-fichier

echo "Ceci est un mail de test" | mail -s "Sujet de test" root@roger.42.fr
sudo mail

https://www.digitalocean.com/community/tutorials/how-to-install-the-apache-web-server-on-debian-9

————————————————————————————————————————————————————————

ENVOI DE MAIL

sudo apt-get install postfix
sudo apt-get install mailutils

sudo vim /etc/postfix/main.cf

Ligne 43 ==> inet_interfaces = loopback-only


—————————————————————————————




DEPLOIIMENT WEB

https://linux-note.com/debian-9-apache-ssl/

apt install apache2
ACTIVATION de SSL pour apache2
==>
sudo a2enmod ssl
sudo a2ensite default-ssl
sudo service apache2 restart

Création du dossier où seront stocker les certificats SSL.
==>
sudo mkdir /etc/apache2/ssl

Générer la clé auto-signée et le certificat avec openssl
==>
sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/apache2/ssl/roger-selfsigned.key -out /etc/apache2/ssl/roger-selfsigned.crt

Adapter le chmod des certificats
==>
sudo chmod 600 /etc/apache2/ssl/*

Editer le fichier /etc/apache2/sites-enabled/default-ssl.conf
==>
sudo vim /etc/apache2/sites-enabled/default-ssl.conf

ajouter en dessous de ServerAdmin  
		      ServerName 10.12.1.102 (mon ip)

modifier l emplacement
 
SSLCertificateFile
SSLCertificateKeyFile

SSLCertificateFile /etc/apache2/ssl/roger-selfsigned.crt
SSLCertificateKeyFile /etc/apache2/ssl/roger-selfsigned.key

Un fois le test concluant, rendre la redirection de http vers https permanante.

Édition du fichier /etc/apache2/sites-available/000-default.conf
==>
sudo vim /etc/apache2/sites-available/000-default.conf

Redirect permanent "/" "https://10.12.1.102"
sudo service apache2 restart

