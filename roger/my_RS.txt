# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    my_RS.txt                                          :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: mascorpi <marvin@42.fr>                    +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2019/02/25 16:51:49 by mascorpi          #+#    #+#              #
#    Updated: 2019/03/05 16:46:39 by mascorpi         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

##############################################
#	______   _____	_____	_____	______	 #
#	|	 /	 |	 |	|		|		|	 /	 #
#	-===     |   |  |  ___  ---     -===     #
#	|   \	 |	 |  |    |  |       |   \    #
#	|    \   `````  ``````  `````   |    \   #
##############################################

	Globalde la VM 8go
--> une partition de 4.2 go (mettre 4.5go lors du partitionnement)


	Creer un utilisateur non root.
	--> lui donne les droits sudo

	************************************************************************************************************

	Quelque paquets utili:
	-> vim
	-> net-tools

	*************************************************************************************************************
	@@@@@@@@@@@@@@@@@@@@@@@@@@@ DHCP/IP STATIC  @@@@@@@@@@@@@@@@@@@
	Desactive le DHCP
	--> /etc/network/interfaces
{
	mettre en commentaire la ligne ou est dhcp
		ajouter :
#
#ip static
		auto enp0s3
		iface enp0s3 inet static
		address "10.12.1.101" <==== faire un ip a pour recuperre son adresse
		netmask 255.255.255.252
		gateway 10.12.254.254
#
}

appliquer les modifs:
# sudo ifdown enp0s3
# sudo ifup enp0s3

************************************************************************************************************

changer le port SSH de base a savoir le port 22 ///////// enlever la permission conexion root
--> sudo vim /etc/ssh/sshd_config

changer le port, enregistrer puis redemarer le service
changer le droit de connexion root, enregistrer puis redemarer le service

sudo service ssh restart

pour se connecter maintenant il faut utilise l option -p avec le nouveau port adequate

*************************************************************************************************************
@@@@@@@@@@@@@@@@@@@@@@@ CONEXION SSH @@@@@@@@@@@@@@@@@@@@@@@@@@

SSH avec publickey

=== Dans le Terminal de l'ordinateur ===
--> 
cd ~/.ssh
	ssh-keygen -t rsa 
(cela va generer une cle RSA unique, selon la session d ordi ou l on se trouve - si on change d ordi il faut le refaire)

	===	Dans la VM ===

	-->	Verifier que ~/.ssh/authorized_keys existe, sinon le creer
	==> mkdir ~/.ssh
	==> touch ~/.ssh/authorized_keys

	=== Dans le terminal de l'ordinateur ==

	scp -P "port defini" ~/.ssh/id_rsa.pub matt@10.12.1.143:/home/matt/.ssh/authorized_keys

	Relancer la VM / le servie

	===	Dans la VM ===
	Modification du Port
	-->	sudo vim /etc/ssh/sshd_config
	passer "#Port 22" en "Port "choisi precedement"
	Modification des modalites d'acces de SSH
	Remplacer :	"#PubkeyAuthentication yes" par "PubkeyAuthentication yes"
	Remplacer : "#PermitRootLogin prohibit-password" par "PermitRootLogin no"
	Remplacer : "AuthorizedKeysFile      .ssh/authorized_keys .ssh/authorized_keys2" par "AuthorizedKeysFile      .ssh/authorized_keys .ssh/authorized_keys2"

	************************************************************************************************************
	@@@@@@@@@@@@@@@@@@@ FIREWALL @@@@@@@@@@@@@@@@@@@@@@@@

	--------------  UFW ---------------
	Instaler ufw 
	--> sudo apt-get install ufw
	reset le firewall avec 

	--> sudo ufw reset
	--> sudo ufw status 
	--> sudo ufw enable
	--> sudo ufw reload
	--> sudo ufw default deny incoming ==> 
	--> sudo ufw allow OpenSSH 
--> sudo ufw limit ssh  (de base limit a 6 tentative de co en 30 sec)

	--> sudo ufw allow in on eth0 to any port 80

	--> sudo ufw allow "port number" 
	--> sudo ufw deny "port number" 
	--> sudo ufw app list

	--> sudo ufw deny 22 comment 'block le port de base'

	--> sudo ufw logging on ===> to maintain logs 

	*****************************************************************************************************************
	@@@@@@@@@@@@@@@@@@@@@@ BLOQUER DDOS @@@@@@@@@@@@@@@@@@@@@@@@@@@

	------------ FAIL2BAN -------------

	sudo vim /etc/fail2ban/jail.local

	ecrire cela dedans 

	==> 
	[sshd]

	port = 6969
	enabled = true
	logpath = %(sshd_log)s
	backend = %(sshd_backend)s
	maxretry = 7
	bantime = 86400

	[sshd-ddos]

	port = 6969
	enabled = true
	logpath = %(sshd_log)s
	backend = %(sshd_backend)s
	maxretry = 7
	bantime = 86400

	[

		sudo fail2ban-client status sshd   ===> permet de savoir qui est dans la prison

		sudo fail2ban-client set sshd unbanip "l ip a deban"


******************************************************************************************************************
@@@@@@@@@@@@@@@@@@@@@@@@ BLOQUER SCAN PORT @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
----------------- PORTSENTRY ----------------------

		pour congigurer
		-->	sudo vim /etc/portsentry/portsentry.conf

##################
# Ignore Options #
##################
		...
# 0 = Do not block UDP/TCP scans.
# 1 = Block UDP/TCP scans.
# 2 = Run external command only (KILL_RUN_CMD)
		Remplacer
		BLOCK_UDP="0"
		BLOCK_TCP="0"
		Par
		BLOCK_UDP="1"
		BLOCK_TCP="1"


	Modification du fichier /etc/default/portsentry :
		-->	sudo vim /etc/default/portsentry
		Remplacer
		TCP_MODE="tcp"
		UDP_MODE="udp"
		Par
		TCP_MODE="atcp"
		UDP_MODE="audp"


******************************************************************************************
@@@@@@@@@@@@@@@@@@@@@@@@@@ ARRETER SERVICE NON NECESSAIRE @@@@@@@@@@@@@@@@@@@@@@@@@@@

Connaitre les service en cours
--> sudo service --status-all
et encore pire
--> systemctl list-unit-files | grep enable

Creer un dossier Script dans /home/matt

puis un fichier en .sh

le rendre executable
sudo chmod +x close.sh

dedans ==>
#!/bin/bash
sudo service dbus stop 2>/dev/null
sudo service procps stop 2>/dev/null
sudo service kmod stop 2>/dev/null
sudo service portsentry restart

2>/dev/null => redirection d'un flux de sortie d’erreur vers rien

sudo systemctl disable apt-daily-upgrade.timer
sudo systemctl disable remote-fs.target
sudo systemctl disable apt-daily.timer
sudo systemctl disable systemd-timesyncd.service
sudo systemctl disable autovt@.service

ATTENTION, SI UTILISATION DE SUDO, POSSIBILITE DE CONFLIT
Ne plus demander de mot de passe sudo pour add user	
sudo vim /etc/sudoers
Modifier
%sudo	ALL=(ALL:ALL) ALL
	Par 
%sudo	ALL=(ALL:ALL) NOPASSWD: ALL

dans crontab -e (-e afin d'editer les actions de contab):
@reboot sleep 20 && ~/Script/close.sh
(afin de close les services non utilise 20 secondes apres le lancement de la VM)


*********************************************************************************************

*********************************************************************************************

DEPLOIIMENT WEB

apt install apache2
ACTIVATION de SSL pour apache2
==>
sudo a2enmod ssl
sudo a2ensite default-ssl
sudo service apache2 restart

Création du dossier où seront stocker les certificats SSL.
==>
sudo mkdir /etc/apache2/ssl

Générer la clé auto-signée et le certificat avec openssl
==>
sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/apache2/ssl/roger-selfsigned.key -out /etc/apache2/ssl/roger-selfsigned.crt

Adapter le chmod des certificats
==>
sudo chmod 600 /etc/apache2/ssl/*

Editer le fichier /etc/apache2/sites-enabled/default-ssl.conf
==>
sudo vim /etc/apache2/sites-enabled/default-ssl.conf

ajouter en dessous de ServerAdmin  ServerName 10.12.1.102 (mon ip)
modifier l emplacement 
SSLCertificateFile avec le chemin precedant
SSLCertificateKeyFile

Un fois le test concluant, rendre la redirection de http vers https permanante.
Édition du fichier /etc/apache2/sites-available/000-default.conf
==>
sudo vim /etc/apache2/sites-available/000-default.conf

Redirect permanent "/" "https://10.12.1.102"
sudo service apache2 restart

